/*
 * @Author: wangyun
 * @CreateTime: 2023-11-20 18:37:42 092
 * @LastEditor: wangyun
 * @EditTime: 2023-11-20 18:37:42 100
 */

using System;
using System.Collections;
using UnityEditor;
using UnityEngine;

public class MilitaryExploitConfig : PrefsEditorWindow<MilitaryExploit> {
	[MenuItem("Window/MilitaryExploit")]
	private static void Open() {
		GetWindow<MilitaryExploitConfig>("刷军功").Show();
	}
	
	private void OnGUI() {
		if (MilitaryExploit.IsRunning) {
			if (GUILayout.Button("关闭")) {
				IsRunning = false;
			}
		} else {
			if (GUILayout.Button("开启")) {
				IsRunning = true;
			}
		}
	}
	
	protected override void OnEnable() {
		base.OnEnable();
		EditorApplication.update += Repaint;
	}

	protected override void OnDisable() {
		base.OnDisable();
		EditorApplication.update -= Repaint;
	}
}

public enum VKCode {
	Q = 81,
	W = 87,
	E = 69,
	R = 82,
	F1 = 112,
	F2 = 113,
	F3 = 114,
	F4 = 115,
}

public class MilitaryExploit {
	public static bool IsRunning;

	[MenuItem("Assets/StartMilitaryExploit", priority = -1)]
	private static void Enable() {
		Disable();
		Debug.Log($"刷军功键盘点击已开启");
		IsRunning = true;
		KeyboardUtils.OnKeyUp = OnKeyUp;
		KeyboardUtils.Hook();
	}

	[MenuItem("Assets/StopMilitaryExploit", priority = -1)]
	private static void Disable() {
		if (IsRunning) {
			KeyboardUtils.Unhook();
			IsRunning = false;
			Debug.Log("刷军功键盘点击已关闭");
		}
	}

	private static void OnKeyUp(int vkCode) {
		switch ((VKCode) vkCode) {
			case VKCode.F1: {
				EditorCoroutineManager.StartCoroutine(OnF1());
				break;
			}
			case VKCode.F2: {
				Operation.Click(960, 460);
				break;
			}
			case VKCode.F3: {
				break;
			}
			case VKCode.F4: {
				break;
			}
		}
	}

	private static IEnumerator OnF1() {
		Operation.Click(1080, 650);
		yield return new EditorWaitForSeconds(0.1F);
		Operation.Click(980, 450);
		yield return new EditorWaitForSeconds(0.2F);
		Operation.Click(1210, 820);
	}
}
